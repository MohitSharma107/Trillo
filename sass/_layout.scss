.container {
   max-width: 120rem;
   margin: 8rem auto;
   background-color: var(--color-grey-light-1);
   box-shadow: 0 2rem 6rem rgba(0,0,0,.3);

   min-height: 50rem;

   @media only screen and (max-width: $bp-largest) {
       margin: 0;
       max-width: 100%;  //width should be 100% same as it was before i.e 1200px
       width: 100%; //just to make sure the width should be 100%
   }
}

.header {
    font-size: 1.4rem;
    height: 7rem;
    background-color: #fff;
    border-bottom: 1px solid var(--color-grey-light-2);

    display: flex;
    justify-content: space-between;
    align-items: center;

    @media only screen and (max-width: $bp-smallest) {
        flex-wrap: wrap;  //allowing flex items to wrap or go into new line if enough space is not available.
        height: 11rem;

        align-content: space-around;  //to control the space in between rows of the container. we use align content property.
        
    }
}

.content {
    display: flex;

    @media only screen and (max-width: $bp-medium) {
        flex-direction: column;
    }
    
}

.sidebar {
    background-color: var(--color-grey-dark-1);
    flex: 0 0 18%;

    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.hotel-view {
  background-color: #fff;

  //Test
  
   flex: 1;  //means that is should take the remaining position in the container.
}

.detail {
    font-size: 1.4rem;
    display: flex;
    padding: 4.5rem;
    background-color: var(--color-grey-light-1);
    border-bottom: var(--line);

    @media only screen and (max-width: $bp-medium) {
      padding: 3rem;
    }

    @media only screen and (max-width: $bp-small) {
        flex-direction: column;
    }

    //when we have 2 media queries then last one will be applied and sequence should be in decreasing order because the 400px screen size width is satisfying above both of the media queries, so last one will be applied.

    
}

.description {
    //the will inherit the font-size property from the parent element is details.
    background-color: #fff;
    padding: 3rem;
    box-shadow: var(--shadow-light);
    flex: 0 0 60%;  //gorw is 0, shrink is 0, width is 60%
    margin-right: 4.5rem;
    @media only screen and (max-width: $bp-medium) {
        padding: 2rem;
        margin-right: 3rem;
    }

    @media only screen and (max-width: $bp-small) {
        margin-right: 0;
        margin-bottom: 3rem;
    }
}

.user-reviews {
    //inherit the font-size property ofthe parent elemetn is details
    flex: 1;  //REMAINING 40% will be occupied by it
    display: flex;
    flex-direction: column;  //now column is the main axis and x axis is the cross axis.
    align-items: center;  // works on cross axis and its difault value is stretch so we need to change it to center.
}